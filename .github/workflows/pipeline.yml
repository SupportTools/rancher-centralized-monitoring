name: CI/CD Pipeline

on:
  push:
  pull_request:

jobs:

  Test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.22"

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-               

      - name: Install static analysis tools
        run: |
          curl -sSfL https://raw.githubusercontent.com/golangci/golangci-lint/master/install.sh | sh -s -- -b $(go env GOPATH)/bin v1.62.2
          go install honnef.co/go/tools/cmd/staticcheck@latest
          go install github.com/securego/gosec/v2/cmd/gosec@latest
          go install github.com/psampaz/go-mod-outdated@latest
          go install github.com/remyoudompheng/go-misc/deadcode@latest

      - name: Go static analysis
        run: |
          go vet ./...
          go fmt ./...

      - name: Dependency management
        run: |
          go mod download
          go mod verify
          go mod tidy -v
          git diff --exit-code go.mod go.sum || (echo "go.mod or go.sum was modified by go mod tidy - please run 'go mod tidy' locally and commit the changes" && exit 1)

      - name: Run tests
        run: |
          go test -v -race ./...

      - name: Security scanning with Gosec
        run: |
          gosec ./...
        continue-on-error: true

  Build:
    needs: Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build Docker image locally for scanning
        run: |
          docker buildx build \
          --platform linux/amd64 \
          --pull \
          --build-arg VERSION=0.0.${{ github.run_number }} \
          --build-arg GIT_COMMIT=${{ github.sha }} \
          --build-arg BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ") \
          --load \
          -t supporttools/rancher-monitoring-relay:scan \
          -f Dockerfile .

      # Basic security check
      - name: Basic security scan
        run: |
          echo "Running basic security checks..."
          # Check for common security issues
          if grep -r "password\|secret\|key" --include="*.go" --include="*.yaml" --include="*.yml" . | grep -v "// " | grep -v "#"; then
            echo "Warning: Potential secrets found in code"
          fi
        continue-on-error: true

      # Push image only if security scans pass
      - name: Docker build and push
        run: |
          docker buildx build \
          --platform linux/amd64 \
          --pull \
          --build-arg VERSION=0.0.${{ github.run_number }} \
          --build-arg GIT_COMMIT=${{ github.sha }} \
          --build-arg BUILD_DATE=$(date -u +"%Y-%m-%dT%H:%M:%SZ") \
          --cache-from supporttools/rancher-monitoring-relay:latest \
          -t supporttools/rancher-monitoring-relay:"0.0.${{ github.run_number }}" \
          -t supporttools/rancher-monitoring-relay:latest \
          --push \
          -f Dockerfile .

  # Publish:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - Build
  #   steps:
  #     - name: Package Helm chart
  #       run: echo "Helm publishing disabled for now"